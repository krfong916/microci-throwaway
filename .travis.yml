# test ci-cd workflow
os: linux
language: node_js
node_js:
  - node

before_install:
  # Install Heroku CLI
  - wget -qO- https://toolbelt.heroku.com/install.sh | sh
  # Login to Container Registries, Docker Hub and Heroku
  - echo "$HEROKU_API_KEY" | docker login -u "$HEROKU_CONTAINER_REGISTRY_USERNAME" --password-stdin registry.heroku.com
  - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
  # Change file permissions, allow CI access to shell script
  - chmod +x ./data/staging/deploy-staging.sh

jobs:
  include:
    
    - stage: Test
      name: 'Unit Test'
      install: npm install
      script: docker-compose run server npm run test

    - stage: Deploy
      name: 'Deploy to Staging'
      script:
        - docker-compose build
      deploy:
      - provider: script
        script:
          # Push the image to Docker Hub
          docker tag microci-throwaway_server $DOCKER_USERNAME/microci-throwaway_server:latest;
          docker push $DOCKER_USERNAME/microci-throwaway_server:latest;
          docker images
        on:
          branch: staging
      - provider: script    
        script:
          # Push the image to Heroku
          docker tag microci-throwaway_server registry.heroku.com/$HEROKU_APP/web;
          heroku container:login;
          docker push registry.heroku.com/$HEROKU_APP/web;
          heroku container:release web --app $HEROKU_APP
        on:
          branch: staging
      after_deploy:
        # Seed the database with table relations and data
        - sh ./data/staging/deploy-staging.sh